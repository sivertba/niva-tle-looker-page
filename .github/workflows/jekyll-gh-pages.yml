# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  schedule:
    - cron: '0 5 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  tle-checker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup conda envirnoment
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: environment.yml
          activate-environment: niva-forecast
      - name: Run tle-checker
        shell: bash -el {0}
        run: |
          conda info
          conda env list
          conda activate niva-forecast
          python pass_computer.py
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pass overview
          path: index.html
      - name: Push changes to index.html to main branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update index.html"
          branch: main
          commit_options: '--no-verify --signoff'
          file_pattern: "*.html"
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
